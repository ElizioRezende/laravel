# This workflow will build a docker container, publish it to Google Container Registry, and deploy it to GKE when a release is created
#
# To configure this workflow:
#
# 1. Ensure that your repository contains the necessary configuration for your Google Kubernetes Engine cluster, including deployment.yml, kustomization.yml, service.yml, etc.
#
# 2. Set up secrets in your workspace: GKE_PROJECT with the name of the project, GKE_EMAIL with the service account email, GKE_KEY with the Base64 encoded JSON service account key (https://github.com/GoogleCloudPlatform/github-actions/tree/docs/service-account-key/setup-gcloud#inputs).
#
# 3. Change the values for the GKE_ZONE, GKE_CLUSTER, IMAGE, REGISTRY_HOSTNAME and DEPLOYMENT_NAME environment variables (below).

name: Build and Deploy to GKE

on:
  pull_request:
    branches:
      - '*'

# Environment variables available to all jobs and steps in this workflow
env:
  GKE_PROJECT: crucial-gasket-273416
  GKE_EMAIL: elizio@unikasistemas.com.br
  GITHUB_SHA: ${{ github.sha }}
  GKE_ZONE: southamerica-east1-b
  GKE_CLUSTER: crucial-cluster
  IMAGE: laravel_nginx
  REGISTRY_HOSTNAME: gcr.io
  DEPLOYMENT_NAME: nginx

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@v2

    # Setup gcloud CLI
    - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      with:
        version: '270.0.0'
        service_account_email: 784672833021-compute@developer.gserviceaccount.com
        service_account_key: ewogICJ0eXBlIjogInNlcnZpY2VfYWNjb3VudCIsCiAgInByb2plY3RfaWQiOiAiY3J1Y2lhbC1nYXNrZXQtMjczNDE2IiwKICAicHJpdmF0ZV9rZXlfaWQiOiAiMDVmMTZmZjUyMjcxZGNkM2RjZDY3MDgwMDkzZmFjZmIyZDZjNTVjNyIsCiAgInByaXZhdGVfa2V5IjogIi0tLS0tQkVHSU4gUFJJVkFURSBLRVktLS0tLVxuTUlJRXZRSUJBREFOQmdrcWhraUc5dzBCQVFFRkFBU0NCS2N3Z2dTakFnRUFBb0lCQVFDcFdRZGNZMWdNNGt2RlxuQXIyZS9YNkpwUDg1SnJKUGJRbEhFajFSWTJwb0JNTGZOT3FXbktCZzlyT1cvM3BXWFFZbTloSGYrRnh6UmYvaFxuSkw4MVFsVklFRUc0QlR0MlJQNkZNem5EZDNUbUVxSjZKRHBhQ3plQlVhU3dYb2YrcUpUMkZGYlZCNXlHcnNtSVxueGQ1cFVCVUU5NTZsYnNSQ09XL2dKdVRBeEh6UlF5aG5OWFpwOTRrOVk2czN5SDYxM1pFN2hENnhodXphSHppWlxuV3R4ZHNwNXU3cFp2VHNEZ3VRaFF1cU4vOG8ranZDZEFpOUpHOWpXdlFpNTd1TUZmUnFuK1BKSENQU203SitUVFxudURoWE9BTUIxM2NPY1NlU2pSWUFRMmZ6QXVuT0wvM1Z4akV4RkI5SmRMdjk5aklJWEkrTnpIQ2srS1hrY05LZ1xudTFNOFc1L2RBZ01CQUFFQ2dnRUFDQ0VYODExcGVxVGFVa2pCWllKeHNwWFRFcUZDNmdFbjh0dHpTaGJsb3J5blxueGlNNko2UzVKaTV4akl3VENWWkoxMUQwcHJXN2FtVXYxVlQ0UU14QVg4YzRBR2R2NVV1R2xFcFRPWWpnZWJMblxuVGNtemEyTWlkUGpBV1I4UWxDN3ZoNmlPU29lbEFlb2VEb3pCRW5rZnFTOWgxRHN1L0tiWk1mOXI5N3oyNk95bVxuVEcwN1NEU3ltcTlMM3l0czJZYzVSckNnazlQMkgvSnpXVXlnenpsTVdtOS8ybzlNb0pkSTJ2UU0zWUwwSjlBT1xucldURHhTZzdYVWZUZ0FWNVdnMHRBRzY2U2h6ejFDSDBZZlU5dkdIVExrTGwzK0pzMU9pWjBIRGtRZVRKWmVmRFxuTzlOaXlyZ0lUWmNUUUJ2TkJjYWRWNGVvNjdHQ3NydkdwYW81RVVZWkFRS0JnUURsV1N0K3JNdURqT3lGVHhVY1xua3Jnd2tuZS9QOXRnaGNJWnFVa0VtR094dll4Q1N3TkJhREJJTy9sZzdYdFNYdzRham9oUEh3aklEbVFDNEcxNFxuQ0ZPcUJLWERkcVVSY05KUm9Mbm9jYTJOMUtoMWxtRHIwV3FqZCtjTUdiNXk4bFVKUHowREJNY2ZrNWtaMFEvblxuaWVtMmlFT1R5d2ZRRktrdURBM3hBMWhaL1FLQmdRQzlCdXFVMWIrUk5wT1ZXakV2U0dpd2FiK1VFMlZvaUdWUVxud2kxV2orc3lDMlVTWXk4VlhvQit6T2o4STN6TXY0azZvbTk3TUJDSi9HV3NyVWVZSmNIRHltb25reG40b1JpQVxuME9OU05LdmJOaURWODducmFYWGdvSTF6aTdjWWFOeW5KMzRRT0IwN0pMMGhyQlRvT3NhU054YzZwVmF1dTQrTFxudWVBWjEyN1RZUUtCZ0hrSDhwMFo0UmhlRVI5VW1ZYUhvdTMzRFh4KzNXMTFpUFh6MFJXOHViZTltTHdQUy91RFxuV1I5MWp1Zm95MUN2MndpR3VVWlAwVm1KeHB1Q0JpTDIrZmZhRmdRdG8zU3R2ai9YZXVSQXdWNzhuNTNXS3ZXblxuZ1FnZEtXL0lVaW5rMnAxVG93WHB5bzlPVzlnMDdKaTZ2ZnhXc3ByVzVSdVpHNkt5TjlVOWQ2MmRBb0dBQWtqTFxuSFBGWVYxRHBoNnlIVzZMc1lQVm1NMHZvdGRLd0pzR3grcEhTcmRBbGNJdHlUamZPSmJva05xZlhJa0pPVGo4WVxuU2N6UzVsZitnbysxaGNrdkJrYXo4Ylo5WWR2UWgvMytRVWdScTV5RDJSSVE5UjlaSlZYTFg5SVliRnNZRDQwU1xub08rTXF1Sk94dEZsajBqbWpXM05BaEJ0Yzc4Z2hQZkNGWTNjOFFFQ2dZRUEyT2xOajdyNUlPR3BKd09vQTZSd1xuRHh5b2NUNG5DTDlaTFJsZHQ1WlJJRndPTjlBSUNlQzBzK1RnWU1oaHE2cytNeTZ2N0l4QllHdDRqZzRRS3Q1UFxuRDhIdUtuV3RlQm5oN01LMXl1ZUFidmxBb1l3YWhJc3Y5ZGsxRFk2TkZneHplM1BsZVBZbzR5OFpFZmRuOGNDTlxuemkxd09VV1ZseTVKM2ZoRWg4bFpsVUk9XG4tLS0tLUVORCBQUklWQVRFIEtFWS0tLS0tXG4iLAogICJjbGllbnRfZW1haWwiOiAiNzg0NjcyODMzMDIxLWNvbXB1dGVAZGV2ZWxvcGVyLmdzZXJ2aWNlYWNjb3VudC5jb20iLAogICJjbGllbnRfaWQiOiAiMTA5ODUzNzczODg3NjQzMzYzNTYxIiwKICAiYXV0aF91cmkiOiAiaHR0cHM6Ly9hY2NvdW50cy5nb29nbGUuY29tL28vb2F1dGgyL2F1dGgiLAogICJ0b2tlbl91cmkiOiAiaHR0cHM6Ly9vYXV0aDIuZ29vZ2xlYXBpcy5jb20vdG9rZW4iLAogICJhdXRoX3Byb3ZpZGVyX3g1MDlfY2VydF91cmwiOiAiaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vb2F1dGgyL3YxL2NlcnRzIiwKICAiY2xpZW50X3g1MDlfY2VydF91cmwiOiAiaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vcm9ib3QvdjEvbWV0YWRhdGEveDUwOS83ODQ2NzI4MzMwMjEtY29tcHV0ZSU0MGRldmVsb3Blci5nc2VydmljZWFjY291bnQuY29tIgp9Cg==

    # Configure docker to use the gcloud command-line tool as a credential helper
    - run: |
        # Set up docker to authenticate
        # via gcloud command-line tool.
        gcloud auth configure-docker
      
    # Build the Docker image
    - name: Build
      run: |        
        docker build -t "$REGISTRY_HOSTNAME"/"$GKE_PROJECT"/"$IMAGE":"$GITHUB_SHA" \
          --build-arg GITHUB_SHA="$GITHUB_SHA" \
          --build-arg GITHUB_REF="$GITHUB_REF" .

    # Push the Docker image to Google Container Registry
    - name: Publish
      run: |
        docker push $REGISTRY_HOSTNAME/$GKE_PROJECT/$IMAGE:$GITHUB_SHA
        
    # Set up kustomize
    - name: Set up Kustomize
      run: |
        docker-compose up -d

    # Deploy the Docker image to the GKE cluster
    - name: Deploy
      run: |
        gcloud container clusters get-credentials $GKE_CLUSTER --zone $GKE_ZONE --project $GKE_PROJECT
        #./kustomize edit set image $REGISTRY_HOSTNAME/$GKE_PROJECT/$IMAGE:${GITHUB_SHA}
        #./kustomize build . | kubectl apply -f -
        kubectl rollout status deployment/$DEPLOYMENT_NAME
        kubectl get services -o wide
